package action;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.TransactionDAO;
import model.TransactionDTO;

public class tranSearchAction implements Action {

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws IOException {	
		
		public String getJSON() {
			
			
			return "";
		}
		int rowsize = Integer.parseInt(request.getParameter("rowSize")); 		// 한 페이지에 보여줄 게시글 수
		int block = 5;  		// 페이지 이동을 위한 블록의 갯수(한 번에 몇개씩?)
		int totalRecord = 0; 	// DB 상의 레코드 전체 수(게시물의 수)		
		int allPage = 0;		// 전체 페이지의 수
		
		int page = 0;			
		
		if(request.getParameter("page") != null) {
			page = Integer.parseInt(request.getParameter("page"));
		}else {
			page = 1;  			// main.jsp에서 '자유게시판' 태그를 클릭했을 때 가장 처음으로 보여줄 페이지
		}
		
		// 해당 페이지의 시작 번호(가장 위에 있는 게시물의 글 번호)
		int startNo = (page*rowsize) - (rowsize-1);
		// 해당 페이지의 끝 번호
		int endNo = (page*rowsize);
		
		// 해당 페이지의 시작 블럭
		int startBlock = (((page-1)/block) * block)+1;
		// 해당 페이지의 마지막 블럭
		int endBlock = (((page-1)/block)*block)+block;
			
		TransactionDAO dao = TransactionDAO.getInstance();
		totalRecord = dao.getCount(0);
		allPage = (int)Math.ceil(totalRecord / (double)rowsize);
		
		if(endBlock > allPage) {
			endBlock = allPage;
		}
		
		List<TransactionDTO> list = dao.getTranList(page, rowsize, 3);
		request.setAttribute("page", page);		
		request.setAttribute("rowsize", rowsize);
		request.setAttribute("block", block);
		request.setAttribute("totalRecord", totalRecord);
		request.setAttribute("allPage", allPage);
		request.setAttribute("startNo", startNo);
		request.setAttribute("endNo", endNo);
		request.setAttribute("startBlock", startBlock);
		request.setAttribute("endBlock", endBlock);
		request.setAttribute("list", list);
		
		ActionForward forward = new ActionForward();
		forward.setRedirect(false);
		forward.setPath("transaction.jsp");
		
		return forward;
	}

}
